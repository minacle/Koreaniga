#!/usr/bin/env sh

# This is free and unencumbered software released into the public domain.
#
# Anyone is free to copy, modify, publish, use, compile, sell, or
# distribute this software, either in source code form or as a compiled
# binary, for any purpose, commercial or non-commercial, and by any
# means.
#
# In jurisdictions that recognize copyright laws, the author or authors
# of this software dedicate any and all copyright interest in the
# software to the public domain. We make this dedication for the benefit
# of the public at large and to the detriment of our heirs and
# successors. We intend this dedication to be an overt act of
# relinquishment in perpetuity of all present and future rights to this
# software under copyright law.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
# EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
# MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
# IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR
# OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
# ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
# OTHER DEALINGS IN THE SOFTWARE.
#
# For more information, please refer to <http://unlicense.org/>

SH="$(command -v sh)"

if [ -z "$PY" ]
then
    PY="$(command -v python3)"
    if [ -z "$PY" ]
    then
        PY="$(command -v python)"
    fi
fi

if [ -z "$PY" ]
then
    exit 1
fi

XCRUN="$(command -v xcrun)"

if [ -n "$XCRUN" ]
then
    SWIFTVER=$(xcrun swift -version | sed 1q | cut -f 4 -d ' ')
else
    SWIFTVER=$(swift -version | sed 1q | cut -f 4 -d ' ')
fi

if [ ${SWIFTVER%.*} != ${SWIFTVER%%.*} ]
then
    SWIFTVER=${SWIFTVER%.*}
fi

if [ -z "$TMPDIR" ]
then
    TMPDIR="$(dirname $(mktemp -u))"
fi

GYB="$TMPDIR/gyb-$SWIFTVER/gyb"
REMOTE="https://github.com/apple/swift/raw/swift-$SWIFTVER-branch/utils/gyb.py"

if [ ! -x "$GYB" ]
then
    mkdir -p "$(dirname $GYB)"
    curl -Lo "$GYB" "$REMOTE" 2>/dev/null
    if [ -f "$GYB" ]
    then
        chmod +x "$GYB"
        NEWGYB="$GYB"
    else
        exit 1
    fi
else
    NEWGYB=
fi

while [ "${1#+}" != "$1" ]
do
    case "${1#+}" in
    generate)
        find . -type f -name '*.gyb' \
               -exec "$SH" -c 'NAME="{}" ;'" \
                               '$PY' '$GYB' --line-directive '' \
                                            -o "'"${NAME%.gyb}" "$NAME" ;'" \
                               TEMP="'"$(mktemp)" ;'" \
                               { echo // This file is automatically generated \
                                         by GYB: Generate Your Boilerplate ; \
                                 echo // DO NOT EDIT ; \
                                 echo ; \
                                 cat "'"${NAME%.gyb}" ; } > "$TEMP" ;'" \
                               mv "'"$TEMP" "${NAME%.gyb}" ;' \;
        exit $?
        ;;
    list)
        find . -type f -name '*.gyb' -print
        exit $?
        ;;
    remove)
        find . -type f -name '*.gyb' \
               -exec "$SH" -c 'NAME="{}"; rm "${NAME%.gyb}"' \;
        exit $?
        ;;
    upgrade)
        if [ -n $NEWGYB ]
        then
            exit 0
        else
            rm "$GYB"
            mkdir -p "$(dirname $GYB)"
            curl -Lo "$GYB" "$REMOTE" 2>/dev/null
            if [ -f "$GYB" ]
            then
                chmod +x "$GYB"
            else
                exit 1
            fi
        fi
        exit 0
        ;;
    help)
        echo usage: "$(basename $0)" '[+help]' '[+generate]' '[+list]' \
                                     '[+remove]' '[+upgrade]'
        echo
        exec "$PY" "$GYB" -h
        ;;
    *)
        exit 64
    esac
    shift
done

if [ ${#@} -gt 0 ]
then
    exec "$PY" "$GYB" "$@"
else
    exec "$0" +help
fi
